# -*- python -*-
# jmyers, 9/11/09 

import os, os.path
import lsst.SConsUtils as scons
import distutils.sysconfig

Import("env")


ext_libs = ["gsl", "gslcblas", "pex_exceptions"]
		      
commonStuff = ['common', 'Detection',
               'Orbit']

common_libs = []

for lib in commonStuff:
    common_libs.append(env.Library(lib, lib+'.cc'))


common_libs.append(env.StaticLibrary('rmsLineFit', 
                                     ['rmsLineFit.cc', 'common', 'Detection'], 
                                     LIBS=ext_libs))

common_libs.append(env.StaticLibrary('fileUtils', ['fileUtils.cc', 'Detection'], LIBS=ext_libs))


common_libs.append(env.StaticLibrary('removeSubsets',  ['removeSubsets.cc'] + common_libs, LIBS=ext_libs))


env.Program('removeSubsets',  ['removeSubsetsMain.cc'] + common_libs, LIBS=ext_libs)



Export("common_libs")
Export("ext_libs")

env.Program('utilities-unittests', ['generalUnitTests.cc'] + common_libs, 
            LIBS=ext_libs)



SConscript(os.path.join('findTracklets','SConscript'))
SConscript(os.path.join('collapseTrackletsAndPostfilters','SConscript'))
SConscript(os.path.join('linkTracklets','SConscript'))

SConscript(os.path.join('detectionProximity','SConscript'))
SConscript(os.path.join('fieldProximity','SConscript'))
SConscript(os.path.join('orbitProximity','SConscript'))


# swig wrappers

#env.CheckSwig("python", ilang="c++")

#env.LoadableModuleIncomplete("_Detection", Split("Detection.i"), LIBS=env.getlibs(["pex_exceptions"]))

#env.LoadableModuleIncomplete("_Orbit", Split("Orbit.i"), LIBS=env.getlibs(["pex_exceptions"]))

#env.LoadableModuleIncomplete("_Tracklet", ["Tracklet.i"], LIBS=env.getlibs(["pex_exceptions"]))

