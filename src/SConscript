# -*- python -*-
# jmyers, 9/11/09 

import os, os.path
import lsst.SConsUtils as scons
import distutils.sysconfig

Import("env")


ext_libs = ["gsl", "gslcblas", "pex_exceptions"]
		      
commonStuff = ['common', 'collapseTrackletsAndPostfilters/SubsetRemover', 'Detection', 'fileUtils',
	      'collapseTrackletsAndPostfilters/TrackletCollapser', 'collapseTrackletsAndPostfilters/rmsLineFit',
               'Orbit']
common_libs = []



for lib in commonStuff:
    env.StaticLibrary(lib, lib+'.cc')
    env.Library(lib, lib+'.cc')
    common_libs.append(lib+'.o')

commonStuff = ['common', 'collapseTrackletsAndPostfilters/SubsetRemover', 'Detection', 
	      'collapseTrackletsAndPostfilters/TrackletCollapser', 'collapseTrackletsAndPostfilters/rmsLineFit']
common_libs = []

for lib in commonStuff:
    env.StaticLibrary(lib, lib+'.cc')
    env.Library(lib, lib+'.cc')
    common_libs.append(lib+'.o')

env.Program('utilities-unittests', ['generalUnitTests.cc'] + common_libs, LIBS=ext_libs)



SConscript('findTracklets/SConscript')
SConscript('collapseTrackletsAndPostfilters/SConscript')
SConscript('linkTracklets/SConscript')

SConscript('detectionProximity/SConscript')
SConscript('fieldProximity/SConscript')
SConscript('orbitProximity/SConscript')


# swig wrappers

#env.CheckSwig("python", ilang="c++")

#env.LoadableModuleIncomplete("_Detection", Split("Detection.i"), LIBS=env.getlibs(["pex_exceptions"]))

#env.LoadableModuleIncomplete("_Orbit", Split("Orbit.i"), LIBS=env.getlibs(["pex_exceptions"]))

#env.LoadableModuleIncomplete("_Tracklet", ["Tracklet.i"], LIBS=env.getlibs(["pex_exceptions"]))

